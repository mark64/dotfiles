source ~/.profile
case $- in
*i*) ;;
*) return ;;
esac

shopt -s histappend
shopt -s checkwinsize
shopt -s globstar

PROMPT_COMMAND='history -a'
HISTCONTROL=ignoreboth
HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/bash/history"
HISTSIZE=1000000000
HISTFILESIZE=2000000000

if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi
get_branch() {
    branch=$(git branch --show-current 2>/dev/null)
    # Add spaces before and after the branch name if set.
    if [ "${branch}" != "" ]; then
        printf " ${branch} "
    fi
}
PS1='${debian_chroot:+($debian_chroot)}\[[01;32m\]\h\[[00m\]:\[[01;34m\]\w\[[00m\]($?)$(get_branch)\$ '
case "$TERM" in
xterm* | rxvt*)
    PS1="\[]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\]$PS1"
    ;;
*) ;;
esac

# Color mode is not the default in a terminal, enable it!
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias ip='ip -c'
fi
# Alias for listing metadata with files.
alias ll='ls -lAFh'

alias p3=python3

# Use neovim!
if command -v nvim 2>&1 > /dev/null; then
    alias vim=nvim
    alias n=nvim
fi

# Enable bash autocompletion.
if ! shopt -oq posix; then
    [ -f /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion
    [ -f /etc/bash_completion ] && . /etc/bash_completion
fi
command -v pandoc >/dev/null 2>&1 && eval "$(pandoc --bash-completion 2>/dev/null)"

# Prefer 1password SSH agent.
command -v 1password >/dev/null && export SSH_AUTH_SOCK=${SSH_AUTH_SOCK:-~/.1password/agent.sock}

# If we have gpg agent and not 1password, use that agent.
# I still need this for old servers that I haven't published my new 1pass SSH key to.
command -v gpg-connect-agent 2>&1 >/dev/null &&
    export GPG_TTY=$(tty) &&
    gpg-connect-agent UPDATESTARTUPTTY /bye >/dev/null &&
    export SSH_AUTH_SOCK=${SSH_AUTH_SOCK:-${XDG_RUNTIME_DIR:-/run/user/$(id -u)}/gnupg/S.gpg-agent.ssh}
alias gpg-new-yubikey="gpg-connect-agent 'scd serialno' 'learn --force' /bye"

[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash ] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash

[ -f /usr/share/autojump/autojump.bash ] && source /usr/share/autojump/autojump.bash

if [ -e "${CARGO_HOME}/env" ]; then
    source "${CARGO_HOME}/env"
fi

# 1password integration.
ONEPASS_CONFIG="${XDG_CONFIG_HOME}"/op/plugins.sh; [ -f "${ONEPASS_CONFIG}" ] && source "${ONEPASS_CONFIG}"
